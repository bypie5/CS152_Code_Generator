State 51 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 115 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | program

    3 program: functions

    4 functions: function
    5          | function functions

    6 $@1: %empty

    7 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    8 declarations: %empty
    9             | declaration SEMICOLON declarations

   10 declaration: identifiers COLON declaration_prime

   11 declaration_prime: TYPE_INTEGER
   12                  | ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER

   13 identifiers: identifier
   14            | identifier COMMA identifiers

   15 identifier: IDENT

   16 statements: statement SEMICOLON
   17           | statement SEMICOLON statements

   18 statement: var ASSIGN expression
   19          | RETURN expression
   20          | CONTINUE
   21          | IF boolexpr THEN statements else_prime ENDIF
   22          | WHILE boolexpr BEGINLOOP statements ENDLOOP
   23          | DO BEGINLOOP statements ENDLOOP WHILE boolexpr
   24          | READ vars
   25          | WRITE vars

   26 else_prime: %empty
   27           | ELSE statements

   28 vars: var
   29     | var COMMA vars

   30 comp: EQ
   31     | NEQ
   32     | LT
   33     | GT
   34     | LTE
   35     | GTE

   36 var: identifier
   37    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   38 expression: multiplicative_expr multiplicative_exprs

   39 multiplicative_exprs: %empty
   40                     | SUB multiplicative_expr multiplicative_exprs
   41                     | ADD multiplicative_expr multiplicative_exprs

   42 multiplicative_expr: term terms

   43 terms: %empty
   44      | MULT term terms
   45      | DIV term terms
   46      | MOD term terms

   47 boolexpr: relation_and_expr r_a_es

   48 r_a_es: %empty
   49       | OR relation_and_expr r_a_es

   50 relation_and_expr: relation_expr r_es

   51 r_es: %empty
   52     | AND relation_expr r_es

   53 relation_expr: expression comp expression
   54              | TRUE
   55              | FALSE
   56              | L_PAREN boolexpr R_PAREN
   57              | NOT expression comp expression
   58              | NOT TRUE
   59              | NOT FALSE
   60              | NOT L_PAREN boolexpr R_PAREN

   61 term: var
   62     | INTEGER
   63     | L_PAREN expression R_PAREN
   64     | SUB var
   65     | SUB INTEGER
   66     | SUB L_PAREN expression R_PAREN
   67     | identifier L_PAREN expressions R_PAREN

   68 expressions: expression
   69            | expression expressions COMMA


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 7
BEGIN_PARAMS (259) 7
END_PARAMS (260) 7
BEGIN_LOCALS (261) 7
END_LOCALS (262) 7
BEGIN_BODY (263) 7
END_BODY (264) 7
TYPE_INTEGER (265) 11 12
ARRAY (266) 12
OF (267) 12
IF (268) 21
THEN (269) 21
ENDIF (270) 21
ELSE (271) 27
WHILE (272) 22 23
DO (273) 23
BEGINLOOP (274) 22 23
ENDLOOP (275) 22 23
CONTINUE (276) 20
READ (277) 24
WRITE (278) 25
AND (279) 52
OR (280) 49
NOT (281) 57 58 59 60
TRUE (282) 54 58
FALSE (283) 55 59
RETURN (284) 19
SUB (285) 40 64 65 66
ADD (286) 41
MULT (287) 44
DIV (288) 45
MOD (289) 46
EQ (290) 30
NEQ (291) 31
LT (292) 32
GT (293) 33
LTE (294) 34
GTE (295) 35
SEMICOLON (296) 7 9 16 17
COLON (297) 10
COMMA (298) 14 29 69
L_PAREN (299) 56 60 63 66 67
R_PAREN (300) 56 60 63 66 67
L_SQUARE_BRACKET (301) 12 37
R_SQUARE_BRACKET (302) 12 37
ASSIGN (303) 18
INTEGER (304) 12 62 65
IDENT (305) 7 15
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
input (53)
    on left: 1 2, on right: 0
program (54)
    on left: 3, on right: 2
functions (55)
    on left: 4 5, on right: 3 5
function (56)
    on left: 7, on right: 4 5
$@1 (57)
    on left: 6, on right: 7
declarations (58)
    on left: 8 9, on right: 7 9
declaration (59)
    on left: 10, on right: 9
declaration_prime (60)
    on left: 11 12, on right: 10
identifiers (61)
    on left: 13 14, on right: 10 14
identifier (62)
    on left: 15, on right: 13 14 36 37 67
statements (63)
    on left: 16 17, on right: 7 17 21 22 23 27
statement (64)
    on left: 18 19 20 21 22 23 24 25, on right: 16 17
else_prime (65)
    on left: 26 27, on right: 21
vars (66)
    on left: 28 29, on right: 24 25 29
comp (67)
    on left: 30 31 32 33 34 35, on right: 53 57
var (68)
    on left: 36 37, on right: 18 28 29 61 64
expression (69)
    on left: 38, on right: 18 19 37 53 57 63 66 68 69
multiplicative_exprs (70)
    on left: 39 40 41, on right: 38 40 41
multiplicative_expr (71)
    on left: 42, on right: 38 40 41
terms (72)
    on left: 43 44 45 46, on right: 42 44 45 46
boolexpr (73)
    on left: 47, on right: 21 22 23 56 60
r_a_es (74)
    on left: 48 49, on right: 47 49
relation_and_expr (75)
    on left: 50, on right: 47 49
r_es (76)
    on left: 51 52, on right: 50 52
relation_expr (77)
    on left: 53 54 55 56 57 58 59 60, on right: 50 52
term (78)
    on left: 61 62 63 64 65 66 67, on right: 42 44 45 46
expressions (79)
    on left: 68 69, on right: 67 69


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (input)

    input      go to state 2
    program    go to state 3
    functions  go to state 4
    function   go to state 5


State 1

    7 function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 2

    0 $accept: input . $end

    $end  shift, and go to state 7


State 3

    2 input: program .

    $default  reduce using rule 2 (input)


State 4

    3 program: functions .

    $default  reduce using rule 3 (program)


State 5

    4 functions: function .
    5          | function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 4 (functions)

    functions  go to state 8
    function   go to state 5


State 6

    7 function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 ($@1)

    $@1  go to state 9


State 7

    0 $accept: input $end .

    $default  accept


State 8

    5 functions: function functions .

    $default  reduce using rule 5 (functions)


State 9

    7 function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 10


State 10

    7 function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    7 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    identifier    go to state 16


State 12

   15 identifier: IDENT .

    $default  reduce using rule 15 (identifier)


State 13

    7 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17


State 14

    9 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   10 declaration: identifiers . COLON declaration_prime

    COLON  shift, and go to state 19


State 16

   13 identifiers: identifier .
   14            | identifier . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 13 (identifiers)


State 17

    7 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 18

    9 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (declarations)

    declarations  go to state 22
    declaration   go to state 14
    identifiers   go to state 15
    identifier    go to state 16


State 19

   10 declaration: identifiers COLON . declaration_prime

    TYPE_INTEGER  shift, and go to state 23
    ARRAY         shift, and go to state 24

    declaration_prime  go to state 25


State 20

   14 identifiers: identifier COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 26
    identifier   go to state 16


State 21

    7 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (declarations)

    declarations  go to state 27
    declaration   go to state 14
    identifiers   go to state 15
    identifier    go to state 16


State 22

    9 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 9 (declarations)


State 23

   11 declaration_prime: TYPE_INTEGER .

    $default  reduce using rule 11 (declaration_prime)


State 24

   12 declaration_prime: ARRAY . L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 25

   10 declaration: identifiers COLON declaration_prime .

    $default  reduce using rule 10 (declaration)


State 26

   14 identifiers: identifier COMMA identifiers .

    $default  reduce using rule 14 (identifiers)


State 27

    7 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   12 declaration_prime: ARRAY L_SQUARE_BRACKET . INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER

    INTEGER  shift, and go to state 30


State 29

    7 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   12 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER . R_SQUARE_BRACKET OF TYPE_INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    7 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    identifier  go to state 40
    statements  go to state 41
    statement   go to state 42
    var         go to state 43


State 32

   12 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET . OF TYPE_INTEGER

    OF  shift, and go to state 44


State 33

   21 statement: IF . boolexpr THEN statements else_prime ENDIF

    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    boolexpr             go to state 55
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    term                 go to state 58


State 34

   22 statement: WHILE . boolexpr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    boolexpr             go to state 59
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    term                 go to state 58


State 35

   23 statement: DO . BEGINLOOP statements ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 60


State 36

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


State 37

   24 statement: READ . vars

    IDENT  shift, and go to state 12

    identifier  go to state 40
    vars        go to state 61
    var         go to state 62


State 38

   25 statement: WRITE . vars

    IDENT  shift, and go to state 12

    identifier  go to state 40
    vars        go to state 63
    var         go to state 62


State 39

   19 statement: RETURN . expression

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 65
    multiplicative_expr  go to state 54
    term                 go to state 58


State 40

   36 var: identifier .
   37    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 36 (var)


State 41

    7 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 67


State 42

   16 statements: statement . SEMICOLON
   17           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 68


State 43

   18 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 69


State 44

   12 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF . TYPE_INTEGER

    TYPE_INTEGER  shift, and go to state 70


State 45

   57 relation_expr: NOT . expression comp expression
   58              | NOT . TRUE
   59              | NOT . FALSE
   60              | NOT . L_PAREN boolexpr R_PAREN

    TRUE     shift, and go to state 71
    FALSE    shift, and go to state 72
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 73
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 74
    multiplicative_expr  go to state 54
    term                 go to state 58


State 46

   54 relation_expr: TRUE .

    $default  reduce using rule 54 (relation_expr)


State 47

   55 relation_expr: FALSE .

    $default  reduce using rule 55 (relation_expr)


State 48

   64 term: SUB . var
   65     | SUB . INTEGER
   66     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 75
    INTEGER  shift, and go to state 76
    IDENT    shift, and go to state 12

    identifier  go to state 40
    var         go to state 77


State 49

   56 relation_expr: L_PAREN . boolexpr R_PAREN
   63 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 78
    multiplicative_expr  go to state 54
    boolexpr             go to state 79
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    term                 go to state 58


State 50

   62 term: INTEGER .

    $default  reduce using rule 62 (term)


State 51

   36 var: identifier .
   37    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   67 term: identifier . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 80
    L_SQUARE_BRACKET  shift, and go to state 66

    L_PAREN   [reduce using rule 36 (var)]
    $default  reduce using rule 36 (var)


State 52

   61 term: var .

    $default  reduce using rule 61 (term)


State 53

   53 relation_expr: expression . comp expression

    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82
    LT   shift, and go to state 83
    GT   shift, and go to state 84
    LTE  shift, and go to state 85
    GTE  shift, and go to state 86

    comp  go to state 87


State 54

   38 expression: multiplicative_expr . multiplicative_exprs

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    SUB       [reduce using rule 39 (multiplicative_exprs)]
    $default  reduce using rule 39 (multiplicative_exprs)

    multiplicative_exprs  go to state 90


State 55

   21 statement: IF boolexpr . THEN statements else_prime ENDIF

    THEN  shift, and go to state 91


State 56

   47 boolexpr: relation_and_expr . r_a_es

    OR  shift, and go to state 92

    $default  reduce using rule 48 (r_a_es)

    r_a_es  go to state 93


State 57

   50 relation_and_expr: relation_expr . r_es

    AND  shift, and go to state 94

    $default  reduce using rule 51 (r_es)

    r_es  go to state 95


State 58

   42 multiplicative_expr: term . terms

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 43 (terms)

    terms  go to state 99


State 59

   22 statement: WHILE boolexpr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 100


State 60

   23 statement: DO BEGINLOOP . statements ENDLOOP WHILE boolexpr

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    identifier  go to state 40
    statements  go to state 101
    statement   go to state 42
    var         go to state 43


State 61

   24 statement: READ vars .

    $default  reduce using rule 24 (statement)


State 62

   28 vars: var .
   29     | var . COMMA vars

    COMMA  shift, and go to state 102

    $default  reduce using rule 28 (vars)


State 63

   25 statement: WRITE vars .

    $default  reduce using rule 25 (statement)


State 64

   63 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 103
    multiplicative_expr  go to state 54
    term                 go to state 58


State 65

   19 statement: RETURN expression .

    $default  reduce using rule 19 (statement)


State 66

   37 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 104
    multiplicative_expr  go to state 54
    term                 go to state 58


State 67

    7 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 7 (function)


State 68

   16 statements: statement SEMICOLON .
   17           | statement SEMICOLON . statements

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    $default  reduce using rule 16 (statements)

    identifier  go to state 40
    statements  go to state 105
    statement   go to state 42
    var         go to state 43


State 69

   18 statement: var ASSIGN . expression

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 106
    multiplicative_expr  go to state 54
    term                 go to state 58


State 70

   12 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER .

    $default  reduce using rule 12 (declaration_prime)


State 71

   58 relation_expr: NOT TRUE .

    $default  reduce using rule 58 (relation_expr)


State 72

   59 relation_expr: NOT FALSE .

    $default  reduce using rule 59 (relation_expr)


State 73

   60 relation_expr: NOT L_PAREN . boolexpr R_PAREN
   63 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 78
    multiplicative_expr  go to state 54
    boolexpr             go to state 107
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    term                 go to state 58


State 74

   57 relation_expr: NOT expression . comp expression

    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82
    LT   shift, and go to state 83
    GT   shift, and go to state 84
    LTE  shift, and go to state 85
    GTE  shift, and go to state 86

    comp  go to state 108


State 75

   66 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 109
    multiplicative_expr  go to state 54
    term                 go to state 58


State 76

   65 term: SUB INTEGER .

    $default  reduce using rule 65 (term)


State 77

   64 term: SUB var .

    $default  reduce using rule 64 (term)


State 78

   53 relation_expr: expression . comp expression
   63 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    LT       shift, and go to state 83
    GT       shift, and go to state 84
    LTE      shift, and go to state 85
    GTE      shift, and go to state 86
    R_PAREN  shift, and go to state 110

    comp  go to state 87


State 79

   56 relation_expr: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 111


State 80

   67 term: identifier L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 112
    multiplicative_expr  go to state 54
    term                 go to state 58
    expressions          go to state 113


State 81

   30 comp: EQ .

    $default  reduce using rule 30 (comp)


State 82

   31 comp: NEQ .

    $default  reduce using rule 31 (comp)


State 83

   32 comp: LT .

    $default  reduce using rule 32 (comp)


State 84

   33 comp: GT .

    $default  reduce using rule 33 (comp)


State 85

   34 comp: LTE .

    $default  reduce using rule 34 (comp)


State 86

   35 comp: GTE .

    $default  reduce using rule 35 (comp)


State 87

   53 relation_expr: expression comp . expression

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 114
    multiplicative_expr  go to state 54
    term                 go to state 58


State 88

   40 multiplicative_exprs: SUB . multiplicative_expr multiplicative_exprs

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    multiplicative_expr  go to state 115
    term                 go to state 58


State 89

   41 multiplicative_exprs: ADD . multiplicative_expr multiplicative_exprs

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    multiplicative_expr  go to state 116
    term                 go to state 58


State 90

   38 expression: multiplicative_expr multiplicative_exprs .

    $default  reduce using rule 38 (expression)


State 91

   21 statement: IF boolexpr THEN . statements else_prime ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    identifier  go to state 40
    statements  go to state 117
    statement   go to state 42
    var         go to state 43


State 92

   49 r_a_es: OR . relation_and_expr r_a_es

    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    relation_and_expr    go to state 118
    relation_expr        go to state 57
    term                 go to state 58


State 93

   47 boolexpr: relation_and_expr r_a_es .

    $default  reduce using rule 47 (boolexpr)


State 94

   52 r_es: AND . relation_expr r_es

    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    relation_expr        go to state 119
    term                 go to state 58


State 95

   50 relation_and_expr: relation_expr r_es .

    $default  reduce using rule 50 (relation_and_expr)


State 96

   44 terms: MULT . term terms

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier  go to state 51
    var         go to state 52
    term        go to state 120


State 97

   45 terms: DIV . term terms

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier  go to state 51
    var         go to state 52
    term        go to state 121


State 98

   46 terms: MOD . term terms

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier  go to state 51
    var         go to state 52
    term        go to state 122


State 99

   42 multiplicative_expr: term terms .

    $default  reduce using rule 42 (multiplicative_expr)


State 100

   22 statement: WHILE boolexpr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    identifier  go to state 40
    statements  go to state 123
    statement   go to state 42
    var         go to state 43


State 101

   23 statement: DO BEGINLOOP statements . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 124


State 102

   29 vars: var COMMA . vars

    IDENT  shift, and go to state 12

    identifier  go to state 40
    vars        go to state 125
    var         go to state 62


State 103

   63 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110


State 104

   37 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 126


State 105

   17 statements: statement SEMICOLON statements .

    $default  reduce using rule 17 (statements)


State 106

   18 statement: var ASSIGN expression .

    $default  reduce using rule 18 (statement)


State 107

   60 relation_expr: NOT L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 127


State 108

   57 relation_expr: NOT expression comp . expression

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 128
    multiplicative_expr  go to state 54
    term                 go to state 58


State 109

   66 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 129


State 110

   63 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 63 (term)


State 111

   56 relation_expr: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 56 (relation_expr)


State 112

   68 expressions: expression .
   69            | expression . expressions COMMA

    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    $default  reduce using rule 68 (expressions)

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 112
    multiplicative_expr  go to state 54
    term                 go to state 58
    expressions          go to state 130


State 113

   67 term: identifier L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 131


State 114

   53 relation_expr: expression comp expression .

    $default  reduce using rule 53 (relation_expr)


State 115

   40 multiplicative_exprs: SUB multiplicative_expr . multiplicative_exprs

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    SUB       [reduce using rule 39 (multiplicative_exprs)]
    $default  reduce using rule 39 (multiplicative_exprs)

    multiplicative_exprs  go to state 132


State 116

   41 multiplicative_exprs: ADD multiplicative_expr . multiplicative_exprs

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    SUB       [reduce using rule 39 (multiplicative_exprs)]
    $default  reduce using rule 39 (multiplicative_exprs)

    multiplicative_exprs  go to state 133


State 117

   21 statement: IF boolexpr THEN statements . else_prime ENDIF

    ELSE  shift, and go to state 134

    $default  reduce using rule 26 (else_prime)

    else_prime  go to state 135


State 118

   49 r_a_es: OR relation_and_expr . r_a_es

    OR  shift, and go to state 92

    $default  reduce using rule 48 (r_a_es)

    r_a_es  go to state 136


State 119

   52 r_es: AND relation_expr . r_es

    AND  shift, and go to state 94

    $default  reduce using rule 51 (r_es)

    r_es  go to state 137


State 120

   44 terms: MULT term . terms

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 43 (terms)

    terms  go to state 138


State 121

   45 terms: DIV term . terms

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 43 (terms)

    terms  go to state 139


State 122

   46 terms: MOD term . terms

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 43 (terms)

    terms  go to state 140


State 123

   22 statement: WHILE boolexpr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 141


State 124

   23 statement: DO BEGINLOOP statements ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 142


State 125

   29 vars: var COMMA vars .

    $default  reduce using rule 29 (vars)


State 126

   37 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 37 (var)


State 127

   60 relation_expr: NOT L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 60 (relation_expr)


State 128

   57 relation_expr: NOT expression comp expression .

    $default  reduce using rule 57 (relation_expr)


State 129

   66 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 66 (term)


State 130

   69 expressions: expression expressions . COMMA

    COMMA  shift, and go to state 143


State 131

   67 term: identifier L_PAREN expressions R_PAREN .

    $default  reduce using rule 67 (term)


State 132

   40 multiplicative_exprs: SUB multiplicative_expr multiplicative_exprs .

    $default  reduce using rule 40 (multiplicative_exprs)


State 133

   41 multiplicative_exprs: ADD multiplicative_expr multiplicative_exprs .

    $default  reduce using rule 41 (multiplicative_exprs)


State 134

   27 else_prime: ELSE . statements

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    identifier  go to state 40
    statements  go to state 144
    statement   go to state 42
    var         go to state 43


State 135

   21 statement: IF boolexpr THEN statements else_prime . ENDIF

    ENDIF  shift, and go to state 145


State 136

   49 r_a_es: OR relation_and_expr r_a_es .

    $default  reduce using rule 49 (r_a_es)


State 137

   52 r_es: AND relation_expr r_es .

    $default  reduce using rule 52 (r_es)


State 138

   44 terms: MULT term terms .

    $default  reduce using rule 44 (terms)


State 139

   45 terms: DIV term terms .

    $default  reduce using rule 45 (terms)


State 140

   46 terms: MOD term terms .

    $default  reduce using rule 46 (terms)


State 141

   22 statement: WHILE boolexpr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 22 (statement)


State 142

   23 statement: DO BEGINLOOP statements ENDLOOP WHILE . boolexpr

    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    INTEGER  shift, and go to state 50
    IDENT    shift, and go to state 12

    identifier           go to state 51
    var                  go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    boolexpr             go to state 146
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    term                 go to state 58


State 143

   69 expressions: expression expressions COMMA .

    $default  reduce using rule 69 (expressions)


State 144

   27 else_prime: ELSE statements .

    $default  reduce using rule 27 (else_prime)


State 145

   21 statement: IF boolexpr THEN statements else_prime ENDIF .

    $default  reduce using rule 21 (statement)


State 146

   23 statement: DO BEGINLOOP statements ENDLOOP WHILE boolexpr .

    $default  reduce using rule 23 (statement)
