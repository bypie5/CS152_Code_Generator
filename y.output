State 53 conflicts: 1 shift/reduce
State 134 conflicts: 9 reduce/reduce
State 135 conflicts: 9 reduce/reduce
State 143 conflicts: 9 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | program

    3 program: functions

    4 functions: function
    5          | function functions

    6 $@1: %empty

    7 $@2: %empty

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    9 declarations: %empty
   10             | declaration SEMICOLON declarations

   11 declaration: identifiers COLON declaration_prime

   12 declaration_prime: TYPE_INTEGER
   13                  | ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER

   14 identifiers: identifier
   15            | identifier COMMA identifiers

   16 identifier: IDENT

   17 statements: statement SEMICOLON
   18           | statement SEMICOLON statements

   19 statement: var ASSIGN expression
   20          | RETURN expression
   21          | CONTINUE

   22 @3: %empty

   23 $@4: %empty

   24 $@5: %empty

   25 statement: IF boolexpr @3 THEN $@4 statements $@5 else_prime ENDIF

   26 @6: %empty

   27 $@7: %empty

   28 $@8: %empty

   29 $@9: %empty

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP $@8 statements $@9 ENDLOOP
   31          | DO BEGINLOOP statements ENDLOOP WHILE boolexpr
   32          | READ vars
   33          | WRITE vars

   34 else_prime: %empty
   35           | ELSE statements

   36 vars: var
   37     | var COMMA vars

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 var: identifier
   45    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   46 expression: multiplicative_expr
   47           | expression ADD multiplicative_expr
   48           | expression SUB multiplicative_expr

   49 multiplicative_expr: term
   50                    | multiplicative_expr MULT term
   51                    | multiplicative_expr DIV term
   52                    | multiplicative_expr MOD term

   53 boolexpr: relation_and_expr
   54         | boolexpr OR relation_and_expr

   55 relation_and_expr: relation_expr
   56                  | relation_and_expr AND relation_expr

   57 relation_expr: expression comp expression
   58              | TRUE
   59              | FALSE
   60              | L_PAREN boolexpr R_PAREN
   61              | NOT expression comp expression
   62              | NOT TRUE
   63              | NOT FALSE
   64              | NOT L_PAREN boolexpr R_PAREN

   65 term: var
   66     | INTEGER
   67     | L_PAREN expression R_PAREN
   68     | SUB var
   69     | SUB INTEGER
   70     | SUB L_PAREN expression R_PAREN
   71     | identifier L_PAREN expressions R_PAREN

   72 expressions: expression
   73            | expression expressions COMMA


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 8
BEGIN_PARAMS (259) 8
END_PARAMS (260) 8
BEGIN_LOCALS (261) 8
END_LOCALS (262) 8
BEGIN_BODY (263) 8
END_BODY (264) 8
TYPE_INTEGER (265) 12 13
ARRAY (266) 13
OF (267) 13
IF (268) 25
THEN (269) 25
ENDIF (270) 25
ELSE (271) 35
WHILE (272) 30 31
DO (273) 31
BEGINLOOP (274) 30 31
ENDLOOP (275) 30 31
CONTINUE (276) 21
READ (277) 32
WRITE (278) 33
AND (279) 56
OR (280) 54
NOT (281) 61 62 63 64
TRUE (282) 58 62
FALSE (283) 59 63
RETURN (284) 20
SUB (285) 48 68 69 70
ADD (286) 47
MULT (287) 50
DIV (288) 51
MOD (289) 52
EQ (290) 38
NEQ (291) 39
LT (292) 40
GT (293) 41
LTE (294) 42
GTE (295) 43
SEMICOLON (296) 8 10 17 18
COLON (297) 11
COMMA (298) 15 37 73
L_PAREN (299) 60 64 67 70 71
R_PAREN (300) 60 64 67 70 71
L_SQUARE_BRACKET (301) 13 45
R_SQUARE_BRACKET (302) 13 45
ASSIGN (303) 19
INTEGER (304) 13 66 69
IDENT (305) 8 16
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
input (53)
    on left: 1 2, on right: 0
program (54)
    on left: 3, on right: 2
functions (55)
    on left: 4 5, on right: 3 5
function (56)
    on left: 8, on right: 4 5
$@1 (57)
    on left: 6, on right: 8
$@2 (58)
    on left: 7, on right: 8
declarations (59)
    on left: 9 10, on right: 8 10
declaration (60)
    on left: 11, on right: 10
declaration_prime (61)
    on left: 12 13, on right: 11
identifiers (62)
    on left: 14 15, on right: 11 15
identifier (63)
    on left: 16, on right: 14 15 44 45 71
statements (64)
    on left: 17 18, on right: 8 18 25 30 31 35
statement (65)
    on left: 19 20 21 25 30 31 32 33, on right: 17 18
@3 (66)
    on left: 22, on right: 25
$@4 (67)
    on left: 23, on right: 25
$@5 (68)
    on left: 24, on right: 25
@6 (69)
    on left: 26, on right: 30
$@7 (70)
    on left: 27, on right: 30
$@8 (71)
    on left: 28, on right: 30
$@9 (72)
    on left: 29, on right: 30
else_prime (73)
    on left: 34 35, on right: 25
vars (74)
    on left: 36 37, on right: 32 33 37
comp (75)
    on left: 38 39 40 41 42 43, on right: 57 61
var (76)
    on left: 44 45, on right: 19 36 37 65 68
expression (77)
    on left: 46 47 48, on right: 19 20 45 47 48 57 61 67 70 72 73
multiplicative_expr (78)
    on left: 49 50 51 52, on right: 46 47 48 50 51 52
boolexpr (79)
    on left: 53 54, on right: 25 30 31 54 60 64
relation_and_expr (80)
    on left: 55 56, on right: 53 54 56
relation_expr (81)
    on left: 57 58 59 60 61 62 63 64, on right: 55 56
term (82)
    on left: 65 66 67 68 69 70 71, on right: 49 50 51 52
expressions (83)
    on left: 72 73, on right: 71 73


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (input)

    input      go to state 2
    program    go to state 3
    functions  go to state 4
    function   go to state 5


State 1

    8 function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 2

    0 $accept: input . $end

    $end  shift, and go to state 7


State 3

    2 input: program .

    $default  reduce using rule 2 (input)


State 4

    3 program: functions .

    $default  reduce using rule 3 (program)


State 5

    4 functions: function .
    5          | function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 4 (functions)

    functions  go to state 8
    function   go to state 5


State 6

    8 function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 ($@1)

    $@1  go to state 9


State 7

    0 $accept: input $end .

    $default  accept


State 8

    5 functions: function functions .

    $default  reduce using rule 5 (functions)


State 9

    8 function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 10


State 10

    8 function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    identifier    go to state 16


State 12

   16 identifier: IDENT .

    $default  reduce using rule 16 (identifier)


State 13

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations . $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 ($@2)

    $@2  go to state 17


State 14

   10 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   11 declaration: identifiers . COLON declaration_prime

    COLON  shift, and go to state 19


State 16

   14 identifiers: identifier .
   15            | identifier . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 14 (identifiers)


State 17

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 21


State 18

   10 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 22
    declaration   go to state 14
    identifiers   go to state 15
    identifier    go to state 16


State 19

   11 declaration: identifiers COLON . declaration_prime

    TYPE_INTEGER  shift, and go to state 23
    ARRAY         shift, and go to state 24

    declaration_prime  go to state 25


State 20

   15 identifiers: identifier COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 26
    identifier   go to state 16


State 21

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 27


State 22

   10 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 10 (declarations)


State 23

   12 declaration_prime: TYPE_INTEGER .

    $default  reduce using rule 12 (declaration_prime)


State 24

   13 declaration_prime: ARRAY . L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 25

   11 declaration: identifiers COLON declaration_prime .

    $default  reduce using rule 11 (declaration)


State 26

   15 identifiers: identifier COMMA identifiers .

    $default  reduce using rule 15 (identifiers)


State 27

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 29
    declaration   go to state 14
    identifiers   go to state 15
    identifier    go to state 16


State 28

   13 declaration_prime: ARRAY L_SQUARE_BRACKET . INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER

    INTEGER  shift, and go to state 30


State 29

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 31


State 30

   13 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER . R_SQUARE_BRACKET OF TYPE_INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 33


State 32

   13 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET . OF TYPE_INTEGER

    OF  shift, and go to state 34


State 33

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 12

    $default  reduce using rule 26 (@6)

    identifier  go to state 41
    statements  go to state 42
    statement   go to state 43
    @6          go to state 44
    var         go to state 45


State 34

   13 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF . TYPE_INTEGER

    TYPE_INTEGER  shift, and go to state 46


State 35

   25 statement: IF . boolexpr @3 THEN $@4 statements $@5 else_prime ENDIF

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    boolexpr             go to state 57
    relation_and_expr    go to state 58
    relation_expr        go to state 59
    term                 go to state 60


State 36

   31 statement: DO . BEGINLOOP statements ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 61


State 37

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 38

   32 statement: READ . vars

    IDENT  shift, and go to state 12

    identifier  go to state 41
    vars        go to state 62
    var         go to state 63


State 39

   33 statement: WRITE . vars

    IDENT  shift, and go to state 12

    identifier  go to state 41
    vars        go to state 64
    var         go to state 63


State 40

   20 statement: RETURN . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 66
    multiplicative_expr  go to state 56
    term                 go to state 60


State 41

   44 var: identifier .
   45    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 44 (var)


State 42

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 68


State 43

   17 statements: statement . SEMICOLON
   18           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 69


State 44

   30 statement: @6 . WHILE boolexpr $@7 BEGINLOOP $@8 statements $@9 ENDLOOP

    WHILE  shift, and go to state 70


State 45

   19 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 46

   13 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER .

    $default  reduce using rule 13 (declaration_prime)


State 47

   61 relation_expr: NOT . expression comp expression
   62              | NOT . TRUE
   63              | NOT . FALSE
   64              | NOT . L_PAREN boolexpr R_PAREN

    TRUE     shift, and go to state 72
    FALSE    shift, and go to state 73
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 74
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 75
    multiplicative_expr  go to state 56
    term                 go to state 60


State 48

   58 relation_expr: TRUE .

    $default  reduce using rule 58 (relation_expr)


State 49

   59 relation_expr: FALSE .

    $default  reduce using rule 59 (relation_expr)


State 50

   68 term: SUB . var
   69     | SUB . INTEGER
   70     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 76
    INTEGER  shift, and go to state 77
    IDENT    shift, and go to state 12

    identifier  go to state 41
    var         go to state 78


State 51

   60 relation_expr: L_PAREN . boolexpr R_PAREN
   67 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 79
    multiplicative_expr  go to state 56
    boolexpr             go to state 80
    relation_and_expr    go to state 58
    relation_expr        go to state 59
    term                 go to state 60


State 52

   66 term: INTEGER .

    $default  reduce using rule 66 (term)


State 53

   44 var: identifier .
   45    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   71 term: identifier . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 81
    L_SQUARE_BRACKET  shift, and go to state 67

    L_PAREN   [reduce using rule 44 (var)]
    $default  reduce using rule 44 (var)


State 54

   65 term: var .

    $default  reduce using rule 65 (term)


State 55

   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr
   57 relation_expr: expression . comp expression

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83
    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    LTE  shift, and go to state 88
    GTE  shift, and go to state 89

    comp  go to state 90


State 56

   46 expression: multiplicative_expr .
   50 multiplicative_expr: multiplicative_expr . MULT term
   51                    | multiplicative_expr . DIV term
   52                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 46 (expression)


State 57

   25 statement: IF boolexpr . @3 THEN $@4 statements $@5 else_prime ENDIF
   54 boolexpr: boolexpr . OR relation_and_expr

    OR  shift, and go to state 94

    $default  reduce using rule 22 (@3)

    @3  go to state 95


State 58

   53 boolexpr: relation_and_expr .
   56 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 96

    $default  reduce using rule 53 (boolexpr)


State 59

   55 relation_and_expr: relation_expr .

    $default  reduce using rule 55 (relation_and_expr)


State 60

   49 multiplicative_expr: term .

    $default  reduce using rule 49 (multiplicative_expr)


State 61

   31 statement: DO BEGINLOOP . statements ENDLOOP WHILE boolexpr

    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 12

    $default  reduce using rule 26 (@6)

    identifier  go to state 41
    statements  go to state 97
    statement   go to state 43
    @6          go to state 44
    var         go to state 45


State 62

   32 statement: READ vars .

    $default  reduce using rule 32 (statement)


State 63

   36 vars: var .
   37     | var . COMMA vars

    COMMA  shift, and go to state 98

    $default  reduce using rule 36 (vars)


State 64

   33 statement: WRITE vars .

    $default  reduce using rule 33 (statement)


State 65

   67 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 99
    multiplicative_expr  go to state 56
    term                 go to state 60


State 66

   20 statement: RETURN expression .
   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 20 (statement)


State 67

   45 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 100
    multiplicative_expr  go to state 56
    term                 go to state 60


State 68

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 8 (function)


State 69

   17 statements: statement SEMICOLON .
   18           | statement SEMICOLON . statements

    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 26 (@6)
    $default  reduce using rule 17 (statements)

    identifier  go to state 41
    statements  go to state 101
    statement   go to state 43
    @6          go to state 44
    var         go to state 45


State 70

   30 statement: @6 WHILE . boolexpr $@7 BEGINLOOP $@8 statements $@9 ENDLOOP

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    boolexpr             go to state 102
    relation_and_expr    go to state 58
    relation_expr        go to state 59
    term                 go to state 60


State 71

   19 statement: var ASSIGN . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 103
    multiplicative_expr  go to state 56
    term                 go to state 60


State 72

   62 relation_expr: NOT TRUE .

    $default  reduce using rule 62 (relation_expr)


State 73

   63 relation_expr: NOT FALSE .

    $default  reduce using rule 63 (relation_expr)


State 74

   64 relation_expr: NOT L_PAREN . boolexpr R_PAREN
   67 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 79
    multiplicative_expr  go to state 56
    boolexpr             go to state 104
    relation_and_expr    go to state 58
    relation_expr        go to state 59
    term                 go to state 60


State 75

   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr
   61 relation_expr: NOT expression . comp expression

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83
    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    LTE  shift, and go to state 88
    GTE  shift, and go to state 89

    comp  go to state 105


State 76

   70 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 106
    multiplicative_expr  go to state 56
    term                 go to state 60


State 77

   69 term: SUB INTEGER .

    $default  reduce using rule 69 (term)


State 78

   68 term: SUB var .

    $default  reduce using rule 68 (term)


State 79

   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr
   57 relation_expr: expression . comp expression
   67 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 82
    ADD      shift, and go to state 83
    EQ       shift, and go to state 84
    NEQ      shift, and go to state 85
    LT       shift, and go to state 86
    GT       shift, and go to state 87
    LTE      shift, and go to state 88
    GTE      shift, and go to state 89
    R_PAREN  shift, and go to state 107

    comp  go to state 90


State 80

   54 boolexpr: boolexpr . OR relation_and_expr
   60 relation_expr: L_PAREN boolexpr . R_PAREN

    OR       shift, and go to state 94
    R_PAREN  shift, and go to state 108


State 81

   71 term: identifier L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 109
    multiplicative_expr  go to state 56
    term                 go to state 60
    expressions          go to state 110


State 82

   48 expression: expression SUB . multiplicative_expr

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    multiplicative_expr  go to state 111
    term                 go to state 60


State 83

   47 expression: expression ADD . multiplicative_expr

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    multiplicative_expr  go to state 112
    term                 go to state 60


State 84

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 85

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 86

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 87

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 88

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


State 89

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


State 90

   57 relation_expr: expression comp . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 113
    multiplicative_expr  go to state 56
    term                 go to state 60


State 91

   50 multiplicative_expr: multiplicative_expr MULT . term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier  go to state 53
    var         go to state 54
    term        go to state 114


State 92

   51 multiplicative_expr: multiplicative_expr DIV . term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier  go to state 53
    var         go to state 54
    term        go to state 115


State 93

   52 multiplicative_expr: multiplicative_expr MOD . term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier  go to state 53
    var         go to state 54
    term        go to state 116


State 94

   54 boolexpr: boolexpr OR . relation_and_expr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    relation_and_expr    go to state 117
    relation_expr        go to state 59
    term                 go to state 60


State 95

   25 statement: IF boolexpr @3 . THEN $@4 statements $@5 else_prime ENDIF

    THEN  shift, and go to state 118


State 96

   56 relation_and_expr: relation_and_expr AND . relation_expr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    relation_expr        go to state 119
    term                 go to state 60


State 97

   31 statement: DO BEGINLOOP statements . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 120


State 98

   37 vars: var COMMA . vars

    IDENT  shift, and go to state 12

    identifier  go to state 41
    vars        go to state 121
    var         go to state 63


State 99

   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr
   67 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 82
    ADD      shift, and go to state 83
    R_PAREN  shift, and go to state 107


State 100

   45 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr

    SUB               shift, and go to state 82
    ADD               shift, and go to state 83
    R_SQUARE_BRACKET  shift, and go to state 122


State 101

   18 statements: statement SEMICOLON statements .

    $default  reduce using rule 18 (statements)


State 102

   30 statement: @6 WHILE boolexpr . $@7 BEGINLOOP $@8 statements $@9 ENDLOOP
   54 boolexpr: boolexpr . OR relation_and_expr

    OR  shift, and go to state 94

    $default  reduce using rule 27 ($@7)

    $@7  go to state 123


State 103

   19 statement: var ASSIGN expression .
   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 19 (statement)


State 104

   54 boolexpr: boolexpr . OR relation_and_expr
   64 relation_expr: NOT L_PAREN boolexpr . R_PAREN

    OR       shift, and go to state 94
    R_PAREN  shift, and go to state 124


State 105

   61 relation_expr: NOT expression comp . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 125
    multiplicative_expr  go to state 56
    term                 go to state 60


State 106

   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr
   70 term: SUB L_PAREN expression . R_PAREN

    SUB      shift, and go to state 82
    ADD      shift, and go to state 83
    R_PAREN  shift, and go to state 126


State 107

   67 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 67 (term)


State 108

   60 relation_expr: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 60 (relation_expr)


State 109

   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr
   72 expressions: expression .
   73            | expression . expressions COMMA

    SUB      shift, and go to state 127
    ADD      shift, and go to state 83
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    $default  reduce using rule 72 (expressions)

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 109
    multiplicative_expr  go to state 56
    term                 go to state 60
    expressions          go to state 128


State 110

   71 term: identifier L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 129


State 111

   48 expression: expression SUB multiplicative_expr .
   50 multiplicative_expr: multiplicative_expr . MULT term
   51                    | multiplicative_expr . DIV term
   52                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 48 (expression)


State 112

   47 expression: expression ADD multiplicative_expr .
   50 multiplicative_expr: multiplicative_expr . MULT term
   51                    | multiplicative_expr . DIV term
   52                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 47 (expression)


State 113

   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr
   57 relation_expr: expression comp expression .

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 57 (relation_expr)


State 114

   50 multiplicative_expr: multiplicative_expr MULT term .

    $default  reduce using rule 50 (multiplicative_expr)


State 115

   51 multiplicative_expr: multiplicative_expr DIV term .

    $default  reduce using rule 51 (multiplicative_expr)


State 116

   52 multiplicative_expr: multiplicative_expr MOD term .

    $default  reduce using rule 52 (multiplicative_expr)


State 117

   54 boolexpr: boolexpr OR relation_and_expr .
   56 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 96

    $default  reduce using rule 54 (boolexpr)


State 118

   25 statement: IF boolexpr @3 THEN . $@4 statements $@5 else_prime ENDIF

    $default  reduce using rule 23 ($@4)

    $@4  go to state 130


State 119

   56 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 56 (relation_and_expr)


State 120

   31 statement: DO BEGINLOOP statements ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 131


State 121

   37 vars: var COMMA vars .

    $default  reduce using rule 37 (vars)


State 122

   45 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 45 (var)


State 123

   30 statement: @6 WHILE boolexpr $@7 . BEGINLOOP $@8 statements $@9 ENDLOOP

    BEGINLOOP  shift, and go to state 132


State 124

   64 relation_expr: NOT L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 64 (relation_expr)


State 125

   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr
   61 relation_expr: NOT expression comp expression .

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 61 (relation_expr)


State 126

   70 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 70 (term)


State 127

   48 expression: expression SUB . multiplicative_expr
   68 term: SUB . var
   69     | SUB . INTEGER
   70     | SUB . L_PAREN expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 133
    INTEGER  shift, and go to state 134
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 135
    multiplicative_expr  go to state 111
    term                 go to state 60


State 128

   73 expressions: expression expressions . COMMA

    COMMA  shift, and go to state 136


State 129

   71 term: identifier L_PAREN expressions R_PAREN .

    $default  reduce using rule 71 (term)


State 130

   25 statement: IF boolexpr @3 THEN $@4 . statements $@5 else_prime ENDIF

    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 12

    $default  reduce using rule 26 (@6)

    identifier  go to state 41
    statements  go to state 137
    statement   go to state 43
    @6          go to state 44
    var         go to state 45


State 131

   31 statement: DO BEGINLOOP statements ENDLOOP WHILE . boolexpr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    boolexpr             go to state 138
    relation_and_expr    go to state 58
    relation_expr        go to state 59
    term                 go to state 60


State 132

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP . $@8 statements $@9 ENDLOOP

    $default  reduce using rule 28 ($@8)

    $@8  go to state 139


State 133

   67 term: L_PAREN . expression R_PAREN
   70     | SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 65
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 140
    multiplicative_expr  go to state 56
    term                 go to state 60


State 134

   66 term: INTEGER .
   69     | SUB INTEGER .

    SUB       reduce using rule 66 (term)
    SUB       [reduce using rule 69 (term)]
    ADD       reduce using rule 66 (term)
    ADD       [reduce using rule 69 (term)]
    MULT      reduce using rule 66 (term)
    MULT      [reduce using rule 69 (term)]
    DIV       reduce using rule 66 (term)
    DIV       [reduce using rule 69 (term)]
    MOD       reduce using rule 66 (term)
    MOD       [reduce using rule 69 (term)]
    COMMA     reduce using rule 66 (term)
    COMMA     [reduce using rule 69 (term)]
    L_PAREN   reduce using rule 66 (term)
    L_PAREN   [reduce using rule 69 (term)]
    INTEGER   reduce using rule 66 (term)
    INTEGER   [reduce using rule 69 (term)]
    IDENT     reduce using rule 66 (term)
    IDENT     [reduce using rule 69 (term)]
    $default  reduce using rule 66 (term)


State 135

   65 term: var .
   68     | SUB var .

    SUB       reduce using rule 65 (term)
    SUB       [reduce using rule 68 (term)]
    ADD       reduce using rule 65 (term)
    ADD       [reduce using rule 68 (term)]
    MULT      reduce using rule 65 (term)
    MULT      [reduce using rule 68 (term)]
    DIV       reduce using rule 65 (term)
    DIV       [reduce using rule 68 (term)]
    MOD       reduce using rule 65 (term)
    MOD       [reduce using rule 68 (term)]
    COMMA     reduce using rule 65 (term)
    COMMA     [reduce using rule 68 (term)]
    L_PAREN   reduce using rule 65 (term)
    L_PAREN   [reduce using rule 68 (term)]
    INTEGER   reduce using rule 65 (term)
    INTEGER   [reduce using rule 68 (term)]
    IDENT     reduce using rule 65 (term)
    IDENT     [reduce using rule 68 (term)]
    $default  reduce using rule 65 (term)


State 136

   73 expressions: expression expressions COMMA .

    $default  reduce using rule 73 (expressions)


State 137

   25 statement: IF boolexpr @3 THEN $@4 statements . $@5 else_prime ENDIF

    $default  reduce using rule 24 ($@5)

    $@5  go to state 141


State 138

   31 statement: DO BEGINLOOP statements ENDLOOP WHILE boolexpr .
   54 boolexpr: boolexpr . OR relation_and_expr

    OR  shift, and go to state 94

    $default  reduce using rule 31 (statement)


State 139

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP $@8 . statements $@9 ENDLOOP

    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 12

    $default  reduce using rule 26 (@6)

    identifier  go to state 41
    statements  go to state 142
    statement   go to state 43
    @6          go to state 44
    var         go to state 45


State 140

   47 expression: expression . ADD multiplicative_expr
   48           | expression . SUB multiplicative_expr
   67 term: L_PAREN expression . R_PAREN
   70     | SUB L_PAREN expression . R_PAREN

    SUB      shift, and go to state 82
    ADD      shift, and go to state 83
    R_PAREN  shift, and go to state 143


State 141

   25 statement: IF boolexpr @3 THEN $@4 statements $@5 . else_prime ENDIF

    ELSE  shift, and go to state 144

    $default  reduce using rule 34 (else_prime)

    else_prime  go to state 145


State 142

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP $@8 statements . $@9 ENDLOOP

    $default  reduce using rule 29 ($@9)

    $@9  go to state 146


State 143

   67 term: L_PAREN expression R_PAREN .
   70     | SUB L_PAREN expression R_PAREN .

    SUB       reduce using rule 67 (term)
    SUB       [reduce using rule 70 (term)]
    ADD       reduce using rule 67 (term)
    ADD       [reduce using rule 70 (term)]
    MULT      reduce using rule 67 (term)
    MULT      [reduce using rule 70 (term)]
    DIV       reduce using rule 67 (term)
    DIV       [reduce using rule 70 (term)]
    MOD       reduce using rule 67 (term)
    MOD       [reduce using rule 70 (term)]
    COMMA     reduce using rule 67 (term)
    COMMA     [reduce using rule 70 (term)]
    L_PAREN   reduce using rule 67 (term)
    L_PAREN   [reduce using rule 70 (term)]
    INTEGER   reduce using rule 67 (term)
    INTEGER   [reduce using rule 70 (term)]
    IDENT     reduce using rule 67 (term)
    IDENT     [reduce using rule 70 (term)]
    $default  reduce using rule 67 (term)


State 144

   35 else_prime: ELSE . statements

    IF        shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 12

    $default  reduce using rule 26 (@6)

    identifier  go to state 41
    statements  go to state 147
    statement   go to state 43
    @6          go to state 44
    var         go to state 45


State 145

   25 statement: IF boolexpr @3 THEN $@4 statements $@5 else_prime . ENDIF

    ENDIF  shift, and go to state 148


State 146

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP $@8 statements $@9 . ENDLOOP

    ENDLOOP  shift, and go to state 149


State 147

   35 else_prime: ELSE statements .

    $default  reduce using rule 35 (else_prime)


State 148

   25 statement: IF boolexpr @3 THEN $@4 statements $@5 else_prime ENDIF .

    $default  reduce using rule 25 (statement)


State 149

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP $@8 statements $@9 ENDLOOP .

    $default  reduce using rule 30 (statement)
