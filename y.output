State 53 conflicts: 1 shift/reduce
State 134 conflicts: 9 reduce/reduce
State 135 conflicts: 9 reduce/reduce
State 144 conflicts: 9 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | program

    3 program: functions

    4 functions: function
    5          | function functions

    6 $@1: %empty

    7 $@2: %empty

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    9 declarations: %empty
   10             | declaration SEMICOLON declarations

   11 declaration: identifiers COLON declaration_prime

   12 declaration_prime: TYPE_INTEGER
   13                  | ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER

   14 identifiers: identifier
   15            | identifier COMMA identifiers

   16 identifier: IDENT

   17 statements: statement SEMICOLON
   18           | statement SEMICOLON statements

   19 statement: var ASSIGN expression
   20          | RETURN expression
   21          | CONTINUE

   22 @3: %empty

   23 $@4: %empty

   24 $@5: %empty

   25 statement: IF boolexpr @3 THEN $@4 statements $@5 else_prime ENDIF

   26 @6: %empty

   27 $@7: %empty

   28 $@8: %empty

   29 $@9: %empty

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP $@8 statements $@9 ENDLOOP

   31 @10: %empty

   32 $@11: %empty

   33 $@12: %empty

   34 statement: @10 DO BEGINLOOP $@11 statements $@12 ENDLOOP WHILE boolexpr
   35          | READ vars
   36          | WRITE vars

   37 else_prime: %empty
   38           | ELSE statements

   39 vars: var
   40     | var COMMA vars

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 var: identifier
   48    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   49 expression: multiplicative_expr
   50           | expression ADD multiplicative_expr
   51           | expression SUB multiplicative_expr

   52 multiplicative_expr: term
   53                    | multiplicative_expr MULT term
   54                    | multiplicative_expr DIV term
   55                    | multiplicative_expr MOD term

   56 boolexpr: relation_and_expr
   57         | boolexpr OR relation_and_expr

   58 relation_and_expr: relation_expr
   59                  | relation_and_expr AND relation_expr

   60 relation_expr: expression comp expression
   61              | TRUE
   62              | FALSE
   63              | L_PAREN boolexpr R_PAREN
   64              | NOT expression comp expression
   65              | NOT TRUE
   66              | NOT FALSE
   67              | NOT L_PAREN boolexpr R_PAREN

   68 term: var
   69     | INTEGER
   70     | L_PAREN expression R_PAREN
   71     | SUB var
   72     | SUB INTEGER
   73     | SUB L_PAREN expression R_PAREN
   74     | identifier L_PAREN expressions R_PAREN

   75 expressions: expression
   76            | expression expressions COMMA


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 8
BEGIN_PARAMS (259) 8
END_PARAMS (260) 8
BEGIN_LOCALS (261) 8
END_LOCALS (262) 8
BEGIN_BODY (263) 8
END_BODY (264) 8
TYPE_INTEGER (265) 12 13
ARRAY (266) 13
OF (267) 13
IF (268) 25
THEN (269) 25
ENDIF (270) 25
ELSE (271) 38
WHILE (272) 30 34
DO (273) 34
BEGINLOOP (274) 30 34
ENDLOOP (275) 30 34
CONTINUE (276) 21
READ (277) 35
WRITE (278) 36
AND (279) 59
OR (280) 57
NOT (281) 64 65 66 67
TRUE (282) 61 65
FALSE (283) 62 66
RETURN (284) 20
SUB (285) 51 71 72 73
ADD (286) 50
MULT (287) 53
DIV (288) 54
MOD (289) 55
EQ (290) 41
NEQ (291) 42
LT (292) 43
GT (293) 44
LTE (294) 45
GTE (295) 46
SEMICOLON (296) 8 10 17 18
COLON (297) 11
COMMA (298) 15 40 76
L_PAREN (299) 63 67 70 73 74
R_PAREN (300) 63 67 70 73 74
L_SQUARE_BRACKET (301) 13 48
R_SQUARE_BRACKET (302) 13 48
ASSIGN (303) 19
INTEGER (304) 13 69 72
IDENT (305) 8 16
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
input (53)
    on left: 1 2, on right: 0
program (54)
    on left: 3, on right: 2
functions (55)
    on left: 4 5, on right: 3 5
function (56)
    on left: 8, on right: 4 5
$@1 (57)
    on left: 6, on right: 8
$@2 (58)
    on left: 7, on right: 8
declarations (59)
    on left: 9 10, on right: 8 10
declaration (60)
    on left: 11, on right: 10
declaration_prime (61)
    on left: 12 13, on right: 11
identifiers (62)
    on left: 14 15, on right: 11 15
identifier (63)
    on left: 16, on right: 14 15 47 48 74
statements (64)
    on left: 17 18, on right: 8 18 25 30 34 38
statement (65)
    on left: 19 20 21 25 30 34 35 36, on right: 17 18
@3 (66)
    on left: 22, on right: 25
$@4 (67)
    on left: 23, on right: 25
$@5 (68)
    on left: 24, on right: 25
@6 (69)
    on left: 26, on right: 30
$@7 (70)
    on left: 27, on right: 30
$@8 (71)
    on left: 28, on right: 30
$@9 (72)
    on left: 29, on right: 30
@10 (73)
    on left: 31, on right: 34
$@11 (74)
    on left: 32, on right: 34
$@12 (75)
    on left: 33, on right: 34
else_prime (76)
    on left: 37 38, on right: 25
vars (77)
    on left: 39 40, on right: 35 36 40
comp (78)
    on left: 41 42 43 44 45 46, on right: 60 64
var (79)
    on left: 47 48, on right: 19 39 40 68 71
expression (80)
    on left: 49 50 51, on right: 19 20 48 50 51 60 64 70 73 75 76
multiplicative_expr (81)
    on left: 52 53 54 55, on right: 49 50 51 53 54 55
boolexpr (82)
    on left: 56 57, on right: 25 30 34 57 63 67
relation_and_expr (83)
    on left: 58 59, on right: 56 57 59
relation_expr (84)
    on left: 60 61 62 63 64 65 66 67, on right: 58 59
term (85)
    on left: 68 69 70 71 72 73 74, on right: 52 53 54 55
expressions (86)
    on left: 75 76, on right: 74 76


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (input)

    input      go to state 2
    program    go to state 3
    functions  go to state 4
    function   go to state 5


State 1

    8 function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 2

    0 $accept: input . $end

    $end  shift, and go to state 7


State 3

    2 input: program .

    $default  reduce using rule 2 (input)


State 4

    3 program: functions .

    $default  reduce using rule 3 (program)


State 5

    4 functions: function .
    5          | function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 4 (functions)

    functions  go to state 8
    function   go to state 5


State 6

    8 function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 ($@1)

    $@1  go to state 9


State 7

    0 $accept: input $end .

    $default  accept


State 8

    5 functions: function functions .

    $default  reduce using rule 5 (functions)


State 9

    8 function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 10


State 10

    8 function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    identifier    go to state 16


State 12

   16 identifier: IDENT .

    $default  reduce using rule 16 (identifier)


State 13

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations . $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 ($@2)

    $@2  go to state 17


State 14

   10 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   11 declaration: identifiers . COLON declaration_prime

    COLON  shift, and go to state 19


State 16

   14 identifiers: identifier .
   15            | identifier . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 14 (identifiers)


State 17

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 21


State 18

   10 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 22
    declaration   go to state 14
    identifiers   go to state 15
    identifier    go to state 16


State 19

   11 declaration: identifiers COLON . declaration_prime

    TYPE_INTEGER  shift, and go to state 23
    ARRAY         shift, and go to state 24

    declaration_prime  go to state 25


State 20

   15 identifiers: identifier COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 26
    identifier   go to state 16


State 21

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 27


State 22

   10 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 10 (declarations)


State 23

   12 declaration_prime: TYPE_INTEGER .

    $default  reduce using rule 12 (declaration_prime)


State 24

   13 declaration_prime: ARRAY . L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 25

   11 declaration: identifiers COLON declaration_prime .

    $default  reduce using rule 11 (declaration)


State 26

   15 identifiers: identifier COMMA identifiers .

    $default  reduce using rule 15 (identifiers)


State 27

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 29
    declaration   go to state 14
    identifiers   go to state 15
    identifier    go to state 16


State 28

   13 declaration_prime: ARRAY L_SQUARE_BRACKET . INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER

    INTEGER  shift, and go to state 30


State 29

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 31


State 30

   13 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER . R_SQUARE_BRACKET OF TYPE_INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 33


State 32

   13 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET . OF TYPE_INTEGER

    OF  shift, and go to state 34


State 33

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    DO        reduce using rule 31 (@10)
    $default  reduce using rule 26 (@6)

    identifier  go to state 40
    statements  go to state 41
    statement   go to state 42
    @6          go to state 43
    @10         go to state 44
    var         go to state 45


State 34

   13 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF . TYPE_INTEGER

    TYPE_INTEGER  shift, and go to state 46


State 35

   25 statement: IF . boolexpr @3 THEN $@4 statements $@5 else_prime ENDIF

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    boolexpr             go to state 57
    relation_and_expr    go to state 58
    relation_expr        go to state 59
    term                 go to state 60


State 36

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 37

   35 statement: READ . vars

    IDENT  shift, and go to state 12

    identifier  go to state 40
    vars        go to state 61
    var         go to state 62


State 38

   36 statement: WRITE . vars

    IDENT  shift, and go to state 12

    identifier  go to state 40
    vars        go to state 63
    var         go to state 62


State 39

   20 statement: RETURN . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 65
    multiplicative_expr  go to state 56
    term                 go to state 60


State 40

   47 var: identifier .
   48    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 47 (var)


State 41

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 67


State 42

   17 statements: statement . SEMICOLON
   18           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 68


State 43

   30 statement: @6 . WHILE boolexpr $@7 BEGINLOOP $@8 statements $@9 ENDLOOP

    WHILE  shift, and go to state 69


State 44

   34 statement: @10 . DO BEGINLOOP $@11 statements $@12 ENDLOOP WHILE boolexpr

    DO  shift, and go to state 70


State 45

   19 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 46

   13 declaration_prime: ARRAY L_SQUARE_BRACKET INTEGER R_SQUARE_BRACKET OF TYPE_INTEGER .

    $default  reduce using rule 13 (declaration_prime)


State 47

   64 relation_expr: NOT . expression comp expression
   65              | NOT . TRUE
   66              | NOT . FALSE
   67              | NOT . L_PAREN boolexpr R_PAREN

    TRUE     shift, and go to state 72
    FALSE    shift, and go to state 73
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 74
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 75
    multiplicative_expr  go to state 56
    term                 go to state 60


State 48

   61 relation_expr: TRUE .

    $default  reduce using rule 61 (relation_expr)


State 49

   62 relation_expr: FALSE .

    $default  reduce using rule 62 (relation_expr)


State 50

   71 term: SUB . var
   72     | SUB . INTEGER
   73     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 76
    INTEGER  shift, and go to state 77
    IDENT    shift, and go to state 12

    identifier  go to state 40
    var         go to state 78


State 51

   63 relation_expr: L_PAREN . boolexpr R_PAREN
   70 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 79
    multiplicative_expr  go to state 56
    boolexpr             go to state 80
    relation_and_expr    go to state 58
    relation_expr        go to state 59
    term                 go to state 60


State 52

   69 term: INTEGER .

    $default  reduce using rule 69 (term)


State 53

   47 var: identifier .
   48    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   74 term: identifier . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 81
    L_SQUARE_BRACKET  shift, and go to state 66

    L_PAREN   [reduce using rule 47 (var)]
    $default  reduce using rule 47 (var)


State 54

   68 term: var .

    $default  reduce using rule 68 (term)


State 55

   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr
   60 relation_expr: expression . comp expression

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83
    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    LTE  shift, and go to state 88
    GTE  shift, and go to state 89

    comp  go to state 90


State 56

   49 expression: multiplicative_expr .
   53 multiplicative_expr: multiplicative_expr . MULT term
   54                    | multiplicative_expr . DIV term
   55                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 49 (expression)


State 57

   25 statement: IF boolexpr . @3 THEN $@4 statements $@5 else_prime ENDIF
   57 boolexpr: boolexpr . OR relation_and_expr

    OR  shift, and go to state 94

    $default  reduce using rule 22 (@3)

    @3  go to state 95


State 58

   56 boolexpr: relation_and_expr .
   59 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 96

    $default  reduce using rule 56 (boolexpr)


State 59

   58 relation_and_expr: relation_expr .

    $default  reduce using rule 58 (relation_and_expr)


State 60

   52 multiplicative_expr: term .

    $default  reduce using rule 52 (multiplicative_expr)


State 61

   35 statement: READ vars .

    $default  reduce using rule 35 (statement)


State 62

   39 vars: var .
   40     | var . COMMA vars

    COMMA  shift, and go to state 97

    $default  reduce using rule 39 (vars)


State 63

   36 statement: WRITE vars .

    $default  reduce using rule 36 (statement)


State 64

   70 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 98
    multiplicative_expr  go to state 56
    term                 go to state 60


State 65

   20 statement: RETURN expression .
   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 20 (statement)


State 66

   48 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 99
    multiplicative_expr  go to state 56
    term                 go to state 60


State 67

    8 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declarations $@2 END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 8 (function)


State 68

   17 statements: statement SEMICOLON .
   18           | statement SEMICOLON . statements

    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 26 (@6)
    DO        reduce using rule 31 (@10)
    $default  reduce using rule 17 (statements)

    identifier  go to state 40
    statements  go to state 100
    statement   go to state 42
    @6          go to state 43
    @10         go to state 44
    var         go to state 45


State 69

   30 statement: @6 WHILE . boolexpr $@7 BEGINLOOP $@8 statements $@9 ENDLOOP

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    boolexpr             go to state 101
    relation_and_expr    go to state 58
    relation_expr        go to state 59
    term                 go to state 60


State 70

   34 statement: @10 DO . BEGINLOOP $@11 statements $@12 ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 102


State 71

   19 statement: var ASSIGN . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 103
    multiplicative_expr  go to state 56
    term                 go to state 60


State 72

   65 relation_expr: NOT TRUE .

    $default  reduce using rule 65 (relation_expr)


State 73

   66 relation_expr: NOT FALSE .

    $default  reduce using rule 66 (relation_expr)


State 74

   67 relation_expr: NOT L_PAREN . boolexpr R_PAREN
   70 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 79
    multiplicative_expr  go to state 56
    boolexpr             go to state 104
    relation_and_expr    go to state 58
    relation_expr        go to state 59
    term                 go to state 60


State 75

   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr
   64 relation_expr: NOT expression . comp expression

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83
    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    LTE  shift, and go to state 88
    GTE  shift, and go to state 89

    comp  go to state 105


State 76

   73 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 106
    multiplicative_expr  go to state 56
    term                 go to state 60


State 77

   72 term: SUB INTEGER .

    $default  reduce using rule 72 (term)


State 78

   71 term: SUB var .

    $default  reduce using rule 71 (term)


State 79

   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr
   60 relation_expr: expression . comp expression
   70 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 82
    ADD      shift, and go to state 83
    EQ       shift, and go to state 84
    NEQ      shift, and go to state 85
    LT       shift, and go to state 86
    GT       shift, and go to state 87
    LTE      shift, and go to state 88
    GTE      shift, and go to state 89
    R_PAREN  shift, and go to state 107

    comp  go to state 90


State 80

   57 boolexpr: boolexpr . OR relation_and_expr
   63 relation_expr: L_PAREN boolexpr . R_PAREN

    OR       shift, and go to state 94
    R_PAREN  shift, and go to state 108


State 81

   74 term: identifier L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 109
    multiplicative_expr  go to state 56
    term                 go to state 60
    expressions          go to state 110


State 82

   51 expression: expression SUB . multiplicative_expr

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    multiplicative_expr  go to state 111
    term                 go to state 60


State 83

   50 expression: expression ADD . multiplicative_expr

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    multiplicative_expr  go to state 112
    term                 go to state 60


State 84

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


State 85

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


State 86

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 87

   44 comp: GT .

    $default  reduce using rule 44 (comp)


State 88

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


State 89

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 90

   60 relation_expr: expression comp . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 113
    multiplicative_expr  go to state 56
    term                 go to state 60


State 91

   53 multiplicative_expr: multiplicative_expr MULT . term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier  go to state 53
    var         go to state 54
    term        go to state 114


State 92

   54 multiplicative_expr: multiplicative_expr DIV . term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier  go to state 53
    var         go to state 54
    term        go to state 115


State 93

   55 multiplicative_expr: multiplicative_expr MOD . term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier  go to state 53
    var         go to state 54
    term        go to state 116


State 94

   57 boolexpr: boolexpr OR . relation_and_expr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    relation_and_expr    go to state 117
    relation_expr        go to state 59
    term                 go to state 60


State 95

   25 statement: IF boolexpr @3 . THEN $@4 statements $@5 else_prime ENDIF

    THEN  shift, and go to state 118


State 96

   59 relation_and_expr: relation_and_expr AND . relation_expr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    relation_expr        go to state 119
    term                 go to state 60


State 97

   40 vars: var COMMA . vars

    IDENT  shift, and go to state 12

    identifier  go to state 40
    vars        go to state 120
    var         go to state 62


State 98

   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr
   70 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 82
    ADD      shift, and go to state 83
    R_PAREN  shift, and go to state 107


State 99

   48 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr

    SUB               shift, and go to state 82
    ADD               shift, and go to state 83
    R_SQUARE_BRACKET  shift, and go to state 121


State 100

   18 statements: statement SEMICOLON statements .

    $default  reduce using rule 18 (statements)


State 101

   30 statement: @6 WHILE boolexpr . $@7 BEGINLOOP $@8 statements $@9 ENDLOOP
   57 boolexpr: boolexpr . OR relation_and_expr

    OR  shift, and go to state 94

    $default  reduce using rule 27 ($@7)

    $@7  go to state 122


State 102

   34 statement: @10 DO BEGINLOOP . $@11 statements $@12 ENDLOOP WHILE boolexpr

    $default  reduce using rule 32 ($@11)

    $@11  go to state 123


State 103

   19 statement: var ASSIGN expression .
   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 19 (statement)


State 104

   57 boolexpr: boolexpr . OR relation_and_expr
   67 relation_expr: NOT L_PAREN boolexpr . R_PAREN

    OR       shift, and go to state 94
    R_PAREN  shift, and go to state 124


State 105

   64 relation_expr: NOT expression comp . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 125
    multiplicative_expr  go to state 56
    term                 go to state 60


State 106

   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr
   73 term: SUB L_PAREN expression . R_PAREN

    SUB      shift, and go to state 82
    ADD      shift, and go to state 83
    R_PAREN  shift, and go to state 126


State 107

   70 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 70 (term)


State 108

   63 relation_expr: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 63 (relation_expr)


State 109

   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr
   75 expressions: expression .
   76            | expression . expressions COMMA

    SUB      shift, and go to state 127
    ADD      shift, and go to state 83
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    $default  reduce using rule 75 (expressions)

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 109
    multiplicative_expr  go to state 56
    term                 go to state 60
    expressions          go to state 128


State 110

   74 term: identifier L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 129


State 111

   51 expression: expression SUB multiplicative_expr .
   53 multiplicative_expr: multiplicative_expr . MULT term
   54                    | multiplicative_expr . DIV term
   55                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 51 (expression)


State 112

   50 expression: expression ADD multiplicative_expr .
   53 multiplicative_expr: multiplicative_expr . MULT term
   54                    | multiplicative_expr . DIV term
   55                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 50 (expression)


State 113

   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr
   60 relation_expr: expression comp expression .

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 60 (relation_expr)


State 114

   53 multiplicative_expr: multiplicative_expr MULT term .

    $default  reduce using rule 53 (multiplicative_expr)


State 115

   54 multiplicative_expr: multiplicative_expr DIV term .

    $default  reduce using rule 54 (multiplicative_expr)


State 116

   55 multiplicative_expr: multiplicative_expr MOD term .

    $default  reduce using rule 55 (multiplicative_expr)


State 117

   57 boolexpr: boolexpr OR relation_and_expr .
   59 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 96

    $default  reduce using rule 57 (boolexpr)


State 118

   25 statement: IF boolexpr @3 THEN . $@4 statements $@5 else_prime ENDIF

    $default  reduce using rule 23 ($@4)

    $@4  go to state 130


State 119

   59 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 59 (relation_and_expr)


State 120

   40 vars: var COMMA vars .

    $default  reduce using rule 40 (vars)


State 121

   48 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 48 (var)


State 122

   30 statement: @6 WHILE boolexpr $@7 . BEGINLOOP $@8 statements $@9 ENDLOOP

    BEGINLOOP  shift, and go to state 131


State 123

   34 statement: @10 DO BEGINLOOP $@11 . statements $@12 ENDLOOP WHILE boolexpr

    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    DO        reduce using rule 31 (@10)
    $default  reduce using rule 26 (@6)

    identifier  go to state 40
    statements  go to state 132
    statement   go to state 42
    @6          go to state 43
    @10         go to state 44
    var         go to state 45


State 124

   67 relation_expr: NOT L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 67 (relation_expr)


State 125

   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr
   64 relation_expr: NOT expression comp expression .

    SUB  shift, and go to state 82
    ADD  shift, and go to state 83

    $default  reduce using rule 64 (relation_expr)


State 126

   73 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 73 (term)


State 127

   51 expression: expression SUB . multiplicative_expr
   71 term: SUB . var
   72     | SUB . INTEGER
   73     | SUB . L_PAREN expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 133
    INTEGER  shift, and go to state 134
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 135
    multiplicative_expr  go to state 111
    term                 go to state 60


State 128

   76 expressions: expression expressions . COMMA

    COMMA  shift, and go to state 136


State 129

   74 term: identifier L_PAREN expressions R_PAREN .

    $default  reduce using rule 74 (term)


State 130

   25 statement: IF boolexpr @3 THEN $@4 . statements $@5 else_prime ENDIF

    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    DO        reduce using rule 31 (@10)
    $default  reduce using rule 26 (@6)

    identifier  go to state 40
    statements  go to state 137
    statement   go to state 42
    @6          go to state 43
    @10         go to state 44
    var         go to state 45


State 131

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP . $@8 statements $@9 ENDLOOP

    $default  reduce using rule 28 ($@8)

    $@8  go to state 138


State 132

   34 statement: @10 DO BEGINLOOP $@11 statements . $@12 ENDLOOP WHILE boolexpr

    $default  reduce using rule 33 ($@12)

    $@12  go to state 139


State 133

   70 term: L_PAREN . expression R_PAREN
   73     | SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 64
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 140
    multiplicative_expr  go to state 56
    term                 go to state 60


State 134

   69 term: INTEGER .
   72     | SUB INTEGER .

    SUB       reduce using rule 69 (term)
    SUB       [reduce using rule 72 (term)]
    ADD       reduce using rule 69 (term)
    ADD       [reduce using rule 72 (term)]
    MULT      reduce using rule 69 (term)
    MULT      [reduce using rule 72 (term)]
    DIV       reduce using rule 69 (term)
    DIV       [reduce using rule 72 (term)]
    MOD       reduce using rule 69 (term)
    MOD       [reduce using rule 72 (term)]
    COMMA     reduce using rule 69 (term)
    COMMA     [reduce using rule 72 (term)]
    L_PAREN   reduce using rule 69 (term)
    L_PAREN   [reduce using rule 72 (term)]
    INTEGER   reduce using rule 69 (term)
    INTEGER   [reduce using rule 72 (term)]
    IDENT     reduce using rule 69 (term)
    IDENT     [reduce using rule 72 (term)]
    $default  reduce using rule 69 (term)


State 135

   68 term: var .
   71     | SUB var .

    SUB       reduce using rule 68 (term)
    SUB       [reduce using rule 71 (term)]
    ADD       reduce using rule 68 (term)
    ADD       [reduce using rule 71 (term)]
    MULT      reduce using rule 68 (term)
    MULT      [reduce using rule 71 (term)]
    DIV       reduce using rule 68 (term)
    DIV       [reduce using rule 71 (term)]
    MOD       reduce using rule 68 (term)
    MOD       [reduce using rule 71 (term)]
    COMMA     reduce using rule 68 (term)
    COMMA     [reduce using rule 71 (term)]
    L_PAREN   reduce using rule 68 (term)
    L_PAREN   [reduce using rule 71 (term)]
    INTEGER   reduce using rule 68 (term)
    INTEGER   [reduce using rule 71 (term)]
    IDENT     reduce using rule 68 (term)
    IDENT     [reduce using rule 71 (term)]
    $default  reduce using rule 68 (term)


State 136

   76 expressions: expression expressions COMMA .

    $default  reduce using rule 76 (expressions)


State 137

   25 statement: IF boolexpr @3 THEN $@4 statements . $@5 else_prime ENDIF

    $default  reduce using rule 24 ($@5)

    $@5  go to state 141


State 138

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP $@8 . statements $@9 ENDLOOP

    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    DO        reduce using rule 31 (@10)
    $default  reduce using rule 26 (@6)

    identifier  go to state 40
    statements  go to state 142
    statement   go to state 42
    @6          go to state 43
    @10         go to state 44
    var         go to state 45


State 139

   34 statement: @10 DO BEGINLOOP $@11 statements $@12 . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 143


State 140

   50 expression: expression . ADD multiplicative_expr
   51           | expression . SUB multiplicative_expr
   70 term: L_PAREN expression . R_PAREN
   73     | SUB L_PAREN expression . R_PAREN

    SUB      shift, and go to state 82
    ADD      shift, and go to state 83
    R_PAREN  shift, and go to state 144


State 141

   25 statement: IF boolexpr @3 THEN $@4 statements $@5 . else_prime ENDIF

    ELSE  shift, and go to state 145

    $default  reduce using rule 37 (else_prime)

    else_prime  go to state 146


State 142

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP $@8 statements . $@9 ENDLOOP

    $default  reduce using rule 29 ($@9)

    $@9  go to state 147


State 143

   34 statement: @10 DO BEGINLOOP $@11 statements $@12 ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 148


State 144

   70 term: L_PAREN expression R_PAREN .
   73     | SUB L_PAREN expression R_PAREN .

    SUB       reduce using rule 70 (term)
    SUB       [reduce using rule 73 (term)]
    ADD       reduce using rule 70 (term)
    ADD       [reduce using rule 73 (term)]
    MULT      reduce using rule 70 (term)
    MULT      [reduce using rule 73 (term)]
    DIV       reduce using rule 70 (term)
    DIV       [reduce using rule 73 (term)]
    MOD       reduce using rule 70 (term)
    MOD       [reduce using rule 73 (term)]
    COMMA     reduce using rule 70 (term)
    COMMA     [reduce using rule 73 (term)]
    L_PAREN   reduce using rule 70 (term)
    L_PAREN   [reduce using rule 73 (term)]
    INTEGER   reduce using rule 70 (term)
    INTEGER   [reduce using rule 73 (term)]
    IDENT     reduce using rule 70 (term)
    IDENT     [reduce using rule 73 (term)]
    $default  reduce using rule 70 (term)


State 145

   38 else_prime: ELSE . statements

    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 12

    DO        reduce using rule 31 (@10)
    $default  reduce using rule 26 (@6)

    identifier  go to state 40
    statements  go to state 149
    statement   go to state 42
    @6          go to state 43
    @10         go to state 44
    var         go to state 45


State 146

   25 statement: IF boolexpr @3 THEN $@4 statements $@5 else_prime . ENDIF

    ENDIF  shift, and go to state 150


State 147

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP $@8 statements $@9 . ENDLOOP

    ENDLOOP  shift, and go to state 151


State 148

   34 statement: @10 DO BEGINLOOP $@11 statements $@12 ENDLOOP WHILE . boolexpr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    INTEGER  shift, and go to state 52
    IDENT    shift, and go to state 12

    identifier           go to state 53
    var                  go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    boolexpr             go to state 152
    relation_and_expr    go to state 58
    relation_expr        go to state 59
    term                 go to state 60


State 149

   38 else_prime: ELSE statements .

    $default  reduce using rule 38 (else_prime)


State 150

   25 statement: IF boolexpr @3 THEN $@4 statements $@5 else_prime ENDIF .

    $default  reduce using rule 25 (statement)


State 151

   30 statement: @6 WHILE boolexpr $@7 BEGINLOOP $@8 statements $@9 ENDLOOP .

    $default  reduce using rule 30 (statement)


State 152

   34 statement: @10 DO BEGINLOOP $@11 statements $@12 ENDLOOP WHILE boolexpr .
   57 boolexpr: boolexpr . OR relation_and_expr

    OR  shift, and go to state 94

    $default  reduce using rule 34 (statement)
